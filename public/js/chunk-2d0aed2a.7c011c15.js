(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0aed2a"],{"0c67":function(e,n,t){"use strict";t.r(n);var _=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"suyan__home"},[t("h1",[e._v("数据结构"),t("el-button",{staticClass:"suyan__btn__print",attrs:{type:"primary",plain:""},on:{click:e.print}},[e._v("打印pdf")])],1),t("el-divider"),t("h3",[e._v("一、二叉树(Binary Tree)")]),t("h4",[e._v("1.1 定义")]),t("p",[e._v("二叉树(binary tree)是有限节点集合构成的结构，其结构的递归定义为：")]),e._m(0),t("p",[e._v("所以节点个数为零的空树也是二叉树，二叉树根节点的左、右子树也是二叉树，其结构同样符合以上定义，当左子树为空树时，表示根节点没有左子节点。")]),t("h4",[e._v("1.2 结构特性")]),t("p",[e._v("首先说明下几个概念：")]),e._m(1),e._m(2),t("h3",[e._v("二、二叉搜索树(Binary Search Tree)")]),t("h4",[e._v("2.1 引子")]),t("p",[e._v("二分法的查找过程是：在一个有序的序列中，每次都会选择有效范围中间位置的元素作判断，即每次判断后，都可以排除近一半的元素，直到查找到目标元素或返回不存在，所以n个有序元素构成的序列，查找的时间复杂度为O(log2n)。既然线性结构能够做到查询复杂度为O(log2n)级别，那二叉搜索树产生又有何必要呢？毕竟二叉搜索树的查询复杂度只是介于O(log2n)~O(n)之间，并不存在查询优势。")]),t("h4",[e._v("2.2 定义")]),t("p",[e._v("二叉搜索树是一种节点值之间具有一定数量级次序的二叉树，对于树中每个节点：")]),e._m(3),t("h3",[e._v("三、二叉树遍历")]),t("p"),t("h3",[e._v("四、平衡二叉树")]),t("p"),t("h3",[e._v("五、哈夫曼树")]),t("p"),t("h3",[e._v("六、红黑树")]),t("p"),t("p"),t("p"),t("p"),t("p")],1)},i=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ul",[t("li",[e._v("三个不相交的节点集合构成，一个作为根节点，一个节点集构成的二叉树作为根节点的左子树，另一个节点集构成的二叉树作为根节点的右子树。")]),t("li",[e._v("当节点数为零时，表示二叉树为空。")])])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ul",[t("li",[e._v("根节点：没有父节点的节点。")]),t("li",[e._v("叶子节点：没有子节点的节点。")]),t("li",[e._v("节点的度：节点的分支个数，二叉树每个节点的分支个数为0~2.")]),t("li",[e._v("路径：连接节点和后代子节点之间的不重复边。")]),t("li",[e._v("节点的深度：从根节点到该节点的路径长。")]),t("li",[e._v("节点的高度：从该节点到叶子节点的最大路径长。")]),t("li",[e._v("节点的层数：父节点的层数加一。")]),t("li",[e._v("数的高度：根节点高度。")]),t("li",[e._v("数的深度：叶子节点深度的最大值。")])])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",[t("a",{attrs:{href:"https://www.jianshu.com/p/d8103efe0b79",target:"_blank",rel:"noopener"}},[e._v("参考文章")])])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ul",[t("li",[e._v("若其左子树存在，则其左子树中每个节点的值都不大于该节点值。")]),t("li",[e._v("若其右子树存在，则其右子树中每个节点的值都不小于该节点值。")])])}],l=t("c276"),r={methods:{print:function(){l["a"].print()}}},v=r,a=t("5d22"),p=Object(a["a"])(v,_,i,!1,null,null,null);n["default"]=p.exports}}]);
//# sourceMappingURL=chunk-2d0aed2a.7c011c15.js.map